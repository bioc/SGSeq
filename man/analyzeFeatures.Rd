% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/main.R
\name{analyzeFeatures}
\alias{analyzeFeatures}
\title{Analysis of splice graph features from BAM files}
\usage{
analyzeFeatures(sample_info, which = NULL, features = NULL,
  predict = is.null(features), alpha = 2, psi = 0.1, beta = 0.2,
  gamma = 0.2, min_n_sample = 1, min_overhang = NA, annotation = NULL,
  max_complexity = 20, verbose = FALSE, cores_per_sample = 1,
  BPPARAM = MulticoreParam(1))
}
\arguments{
\item{sample_info}{Data frame with sample information including
mandatory character columns \dQuote{sample_name} and \dQuote{file_bam}.}

\item{which}{\code{GRanges} of genomic regions to be considered for
feature prediction, passed to \code{ScanBamParam}}

\item{features}{\code{TxFeatures} or \code{SGFeatures} object}

\item{predict}{Logical indicating whether transcript
features should be predicted from BAM files}

\item{alpha}{Minimum FPKM required for a splice junction to be included}

\item{psi}{Minimum splice frequency required for a splice junction
to be included}

\item{beta}{Minimum relative coverage required for an internal exon
to be included}

\item{gamma}{Minimum relative coverage required for a terminal exon
to be included}

\item{min_n_sample}{Minimum number of samples a feature must be
observed in to be included}

\item{min_overhang}{After merging, terminal exons are processed.
For terminal exons sharing a splice site with an internal exon,
minimum overhang required for terminal exons to be included.
For remaining terminal exons overlapping other exons, minimum
overhang required to suppress trimming. Use \code{NA} to remove all
terminal exons sharing a splice with an internal exon and trim all
remaining terminal exons overlapping other exons. Use \code{NULL}
to disable processing (disabling processing is useful if results are
subsequently merged with other predictions and processing is
postponed until after the merging step).}

\item{annotation}{\code{TxFeatures} object used for annotation}

\item{max_complexity}{Maximum allowed complexity. If a locus exceeds
this threshold, it is skipped, resulting in a warning message.
Here complexity is defined as the maximum number of unique filtered
splice junctions overlapping a given position in a locus.
High complexity regions are often due to spurious read alignments
and can significantly slow down processing.
To disable this filter, set to \code{NA}.}

\item{verbose}{If \code{TRUE}, generate messages indicating progress}

\item{cores_per_sample}{Number of cores per sample}

\item{BPPARAM}{\code{BiocParallelParam} for processing samples in
parallel, defaults to \code{MulticoreParam(1)}}
}
\value{
\code{SGFeatureCounts} object
}
\description{
High-level function for the prediction and quantification of
splice junctions, exon bins and splice sites from BAM files.
}
\details{
If alignment information is not included in \code{sample_info},
it is obtained directly from BAM files with \code{\link{getBamInfo}}.

Splice junctions and exons are predicted from BAM files with
\code{\link{predictTxFeatures}}.

Known features can be provided as \code{TxFeatures} or
\code{SGFeatures} via argument \code{features}.

If \code{features} is not \code{NULL} and \code{predict} is
\code{TRUE}, known features are augmented with predictions.

Known and/or predicted transcript features are converted to splice
graph features. For details, see \code{\link{convertToSGFeatures}}.

Optionally, splice graph features can be annotated with respect to
a \code{TxFeatures} object provided via argument \code{annotation}.
For details, see the help page for function \code{\link{annotate}}.

Finally, compatible fragment counts for splice graph features are
obtained from BAM files with \code{\link{getSGFeatureCounts}}.
}
\examples{
path <- system.file("extdata", package = "SGSeq")
si$file_bam <- file.path(path, "bams", si$file_bam)
sgfc <- analyzeFeatures(si, gr)
}
\author{
Leonard Goldstein
}

